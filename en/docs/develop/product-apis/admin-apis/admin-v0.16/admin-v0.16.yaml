swagger: '2.0'
######################################################
# Prolog
######################################################
info:
  version: "0.16.0"
  title: "WSO2 API Manager - Admin"
  description: |
    This document specifies a **RESTful API** for WSO2 **API Manager** - Admin Portal.

    # Authentication
    Our REST APIs are protected using OAuth2 and access control is achieved through scopes. Before you start invoking
    the the API you need to obtain an access token with the required scopes. This guide will walk you through the steps
    that you will need to follow to obtain an access token.
    First you need to obtain the consumer key/secret key pair by calling the dynamic client registration (DCR) endpoint. You can add your preferred grant types
    in the payload. A Sample payload is shown below.
    ```
      {
      "callbackUrl":"www.google.lk",
      "clientName":"rest_api_admin",
      "owner":"admin",
      "grantType":"client_credentials password refresh_token",
      "saasApp":true
      }
    ```
    Create a file (payload.json) with the above sample payload, and use the cURL shown bellow to invoke the DCR endpoint. Authorization header of this should contain the
    base64 encoded admin username and password
    Format of the request
    ```
      curl -X POST -H "Authorization: Basic Base64(admin_username:admin_password)" -H "Content-Type: application/json"
      \ -d @payload.json https://<host>:<servlet_port>/client-registration/v0.16/register
    ```
    Sample request
    ```
      curl -X POST -H "Authorization: Basic YWRtaW46YWRtaW4=" -H "Content-Type: application/json"
      \ -d @payload.json https://localhost:9443/client-registration/v0.16/register
    ```
    Following is a sample response after invoking the above curl
    ```
    {
    "clientId": "fOCi4vNJ59PpHucC2CAYfYuADdMa",
    "clientName": "rest_api_admin",
    "callBackURL": "www.google.lk",
    "clientSecret": "a4FwHlq0iCIKVs2MPIIDnepZnYMa",
    "isSaasApplication": true,
    "appOwner": "admin",
    "jsonString": "{\"grant_types\":\"client_credentials password refresh_token\"}",
    "jsonAppAttribute": "{}",
    "tokenType": null
    }
    ```
    Next you must use the above client id and secret to obtain the access token.
    We will be using the password grant type for this, you can use any grant type you desire.
    You also need to add the proper **scope** when getting the access token. All possible scopes for publisher REST API can be viewed in **OAuth2 Security** section
    of this document and scope for each resource is given in **authorization** section of resource documentation.
    Following is the format of the request if you are using the password grant type
    ```
    curl -k -d "grant_type=password&username=<admin_username>&password=<admin_passowrd&scope=<scopes seperated by space>"
    \ -H "Authorization: Basic base64(cliet_id:client_secret)"
    \ https://<host>:<gateway_port>/token
    ```
    Sample request.
    ```
    curl https://localhost:8243/token -k \
    -H "Authorization: Basic Zk9DaTR2Tko1OVBwSHVjQzJDQVlmWXVBRGRNYTphNEZ3SGxxMGlDSUtWczJNUElJRG5lcFpuWU1h" \
    -d "grant_type=password&username=admin&password=admin&scope=apim:tier_view apim:tier_manage"
    ```
    And following is a sample response to the above request.
    ```
    {
    "access_token": "e79bda48-3406-3178-acce-f6e4dbdcbb12",
    "refresh_token": "a757795d-e69f-38b8-bd85-9aded677a97c",
    "scope": "apim:tier_view apim:tier_manage",
    "token_type": "Bearer",
    "expires_in": 3600
    }
    ```
    Now you have a valid access token, which you can use to invoke an API.
    Navigate through the API descriptions to find the required API, obtain an access token as described above and invoke the API with the authentication header.
    If you use a different authentication mechanism, this process may change.

    # Try out in Postman

    If you want to try-out the embedded postman collection with "Run in Postman" option, please follow the guidelines listed below.
    * All of the OAuth2 secured endpoints have been configured with an Authorization Bearer header. Therefore, before invoking any OAuth2 secured REST API resource make sure you run the `Register DCR Application` and `Generate Access Token` requests to fetch an access token with all required scopes.
    * Make sure you have an API Manager instance up and running.
    * Update the `basepath` parameter to match the hostname and port of the APIM instance.

    [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/69e92fe81c039b84956e)
  contact:
    name: "WSO2"
    url: "https://wso2.com/api-manager/"
    email: "architecture@wso2.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"

######################################################
# The fixed parts of the URLs of the API
######################################################

# The schemes supported by the API
schemes:
  - https

# The domain of the API.
# This is configured by the customer during deployment.
# The given host is just an example.
host: apis.wso2.com

# The base path of the API.
# Will be prefixed to all paths.
basePath: /api/am/admin/v0.16

# The following media types can be passed as input in message bodies of the API.
# The actual media type must be specified in the Content-Type header field of the request.
# The default is json, i.e. the Content-Type header is not needed to
# be set, but supporting it serves extensibility.
consumes:
  - application/json

# The following media types may be passed as output in message bodies of the API.
# The media type(s) consumable by the requestor is specified in the Accept header field
# of the corresponding request.
# The actual media type returned will be specfied in the Content-Type header field
# of the of the response.
# The default of the Accept header is json, i.e. there is not needed to
# set the value, but supporting it serves extensibility.
produces:
  - application/json

securityDefinitions:
  OAuth2Security:
    type: oauth2
    flow: password
    tokenUrl: https://localhost:9443/oauth2/token
    scopes:
      apim:tier_view: View throttling policies
      apim:tier_manage: Update and delete throttling policies
      apim:bl_view: View deny policies
      apim:bl_manage: Update and delete deny policies
      apim:mediation_policy_view: View mediation policies
      apim:mediation_policy_create: Create and update mediation policies
      apim:app_owner_change: Retrieve and manage applications
      apim:app_import_export: Import and export applications related operations
      apim:api_import_export: Import and export APIs related operations
      apim:label_manage: Manage microgateway labels
      apim:label_read: Retrieve microgateway labels
      apim:monetization_usage_publish: Retrieve and publish Monetization related usage records
      apim:api_workflow: Manage workflows
      apim:bot_data: Retrieve bot detection data
      apim:tenantInfo: Retrieve tenant related information
      apim:admin_operations: Manage API categories and Key Managers related operations

######################################################
# The "API Collection" resource APIs
######################################################
paths:
######################################################
# The "Application Throttling Policy Collection" resource API
######################################################
  '/throttling/policies/application':

#-----------------------------------------------------
# Retrieve all Application level policies
#-----------------------------------------------------
    get:
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/admin/v0.16/throttling/policies/application"
      summary: Get all Application Throttling Policies
      description: |
        Retrieves all existing application throttling policies.
      parameters:
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/If-None-Match'
        - $ref: '#/parameters/If-Modified-Since'
      tags:
        - Application Policy (Collection)
      responses:
        200:
          description: |
            OK.
            Policies returned
          schema:
            $ref: '#/definitions/ApplicationThrottlePolicyList'
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
        304:
          description: |
            Not Modified.
            Empty body because the client has already the latest version of the requested resource (Will be supported in future).
        406:
          $ref: '#/responses/NotAcceptable'

#-----------------------------------------------------
# Add a Application level Throttling Policy
#-----------------------------------------------------
    post:
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -X POST -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" -H "Content-Type: application/json" -d @data.json "https://127.0.0.1:9443/api/am/admin/v0.16/throttling/policies/application"
      summary: Add an Application Throttling Policy
      description: |
        This operation can be used to add a new application level throttling policy.
      parameters:
        - in: body
          name: body
          description: |
            Application level policy object that should to be added
          required: true
          schema:
            $ref: '#/definitions/ApplicationThrottlePolicy'
        - $ref: '#/parameters/Content-Type'
      tags:
        - Application Policy (Collection)
      responses:
        201:
          description: |
            Created.
            Successful response with the newly created object as entity in the body.
            Location header contains URL of newly created entity.
          schema:
            $ref: '#/definitions/ApplicationThrottlePolicy'
          headers:
            Location:
              description: |
                Location of the newly created Policy object.
              type: string
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
        400:
          $ref: '#/responses/BadRequest'
        415:
          description: |
            Unsupported media type.
            The entity of the request was in a not supported format.
        409:
          $ref: '#/responses/Conflict'
        500:
          $ref: '#/responses/InternalServerError'

######################################################
# The "Individual Application Throttling Policy" resource API
######################################################
  '/throttling/policies/application/{policyId}':

#-----------------------------------------------------
# Retrieve a certain Application Policy
#-----------------------------------------------------
    get:
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/admin/v0.16/throttling/policies/application/4e098fff-7f94-459a-981f-d257332f69d0"
      summary: Get an Application Policy
      description: |
        Retrieves an Application Policy.
      parameters:
        - $ref: '#/parameters/policyId'
        - $ref: '#/parameters/If-None-Match'
        - $ref: '#/parameters/If-Modified-Since'
      tags:
        - Application Policy (Individual)
      responses:
        200:
          description: |
            OK.
            Policy returned
          schema:
            $ref: '#/definitions/ApplicationThrottlePolicy'
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
        304:
          description: |
            Not Modified.
            Empty body because the client has already the latest version of the requested resource (Will be supported in future).
        404:
          $ref: '#/responses/NotFound'
        406:
          $ref: '#/responses/NotAcceptable'

#-----------------------------------------------------
# Delete an Application level throttling policy
#-----------------------------------------------------
    delete:
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -X DELETE -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/admin/v0.16/throttling/policies/application/4e098fff-7f94-459a-981f-d257332f69d0"
      summary: Delete an Application Throttling policy
      description: |
        Deletes an Application level throttling policy.
      parameters:
        - $ref: '#/parameters/policyId'
        - $ref: '#/parameters/If-Match'
        - $ref: '#/parameters/If-Unmodified-Since'
      tags:
        - Application Policy (Individual)
      responses:
        200:
          description: |
            OK.
            Resource successfully deleted.
        404:
          $ref: '#/responses/NotFound'
        412:
          $ref: '#/responses/PreconditionFailed'

#-----------------------------------------------------
# Update an Application throttling policy
#-----------------------------------------------------
    put:
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -X PUT -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" -H "Content-Type: application/json" -d @data.json "https://127.0.0.1:9443/api/am/admin/v0.16/throttling/policies/application/4e098fff-7f94-459a-981f-d257332f69d0"
      summary: Update an Application Throttling policy
      description: |
        Updates an existing Application level throttling policy. Upon succesfull, you will receive the updated application policy as the response.
      parameters:
        - $ref: '#/parameters/policyId'
        - in: body
          name: body
          description: |
            Policy object that needs to be modified
          required: true
          schema:
            $ref: '#/definitions/ApplicationThrottlePolicy'
        - $ref: '#/parameters/Content-Type'
        - $ref: '#/parameters/If-Match'
        - $ref: '#/parameters/If-Unmodified-Since'
      tags:
        - Application Policy (Individual)
      responses:
        200:
          description: |
            OK.
            Policy updated.
          schema:
            $ref: '#/definitions/ApplicationThrottlePolicy'
          headers:
            Location:
              description: |
                The URL of the newly created resource.
              type: string
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource.
                Used by caches, or in conditional request.
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional reuquests.
              type: string
        400:
          $ref: '#/responses/BadRequest'
        404:
          $ref: '#/responses/NotFound'
        412:
          $ref: '#/responses/PreconditionFailed'

  /policies/mediation:
#-----------------------------------------------------------------------------------------
# Retrieving the list of all global mediation sequences under a given search condition
#-----------------------------------------------------------------------------------------
    get:
      x-scope: apim:mediation_policy_view
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/admin/v0.16/policies/mediation"
      summary: |
        Get All Global Mediation Policies
      description: |
        This operation provides you a list of available all global level mediation policies.
      parameters:
        - $ref : '#/parameters/limit'
        - $ref : '#/parameters/offset'
        - name : query
          in: query
          description: "-Not supported yet-"
          type: string
        - $ref : "#/parameters/Accept"
        - $ref : "#/parameters/If-None-Match"
      tags:
        - Mediation Policy (Collection)
      responses:
        200:
          description: |
            OK.
            List of mediation policies is returned.
          schema:
            $ref: '#/definitions/mediationList'
          headers:
            Content-Type:
              description: The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).
              type: string
        304:
          description: |
            Not Modified.
            Empty body because the client has already the latest version of the requested resource (Will be supported in future).
        406:
          $ref: '#/responses/NotAcceptable'


#----------------------------------------------------------------------------
# Upload a global mediation policy
#----------------------------------------------------------------------------
    post:
      security:
        - OAuth2Security:
          - apim:mediation_policy_create
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -X POST -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" -H "Content-Type: application/json" -d @data.json "https://127.0.0.1:9443/api/am/admin/v0.16/policies/mediation"
      summary: Add a Global Mediation Policy
      description: |
        This operation can be used to add a new global mediation policy.
      parameters:
        - in: body
          name: body
          description: mediation policy to upload
          required: true
          schema:
             $ref: '#/definitions/Mediation'
        - $ref: '#/parameters/Content-Type'
        - $ref: '#/parameters/If-Match'
        - $ref: '#/parameters/If-Unmodified-Since'
      tags:
        - Mediation Policy (Collection)
      responses:
        200:
          description: |
            OK.
            Mediation policy added successfully.
          schema:
            $ref : '#/definitions/Mediation'
          headers:
            Location:
              description: |
                The URL of the uploaded thumbnail image of the API.
              type: string
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
        400:
          $ref: '#/responses/BadRequest'
        404:
          $ref: '#/responses/NotFound'
        412:
          $ref: '#/responses/PreconditionFailed'

######################################################
# The "Individual global mediation sequence" resource
######################################################
  /policies/mediation/{mediationPolicyId}:

#-----------------------------------------------------
# Retrieve a particular global mediation policy
#-----------------------------------------------------
    get:
      security:
        - OAuth2Security:
          - apim:mediation_policy_view
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/admin/v0.16/policies/mediation/2253cf01-0356-4cc1-9941-3034a8c29007"
      summary: Get a Global Mediation Policy
      description: |
        This operation can be used to retrieve a particular global mediation policy.
      parameters:
        - $ref: '#/parameters/mediationPolicyId'
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/If-None-Match'
        - $ref: '#/parameters/If-Modified-Since'
      tags:
        - Mediation Policy (Individual)
      responses:
        200:
          description: |
            OK.
            Mediation Policy returned.
          schema:
            $ref: '#/definitions/Mediation'
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
        304:
          description: |
            Not Modified.
            Empty body because the client has already the latest version of the requested resource (Will be supported in future).
        404:
          $ref: '#/responses/NotFound'
        406:
          $ref: '#/responses/NotAcceptable'

#-----------------------------------------------------
# Delete the mediation policy
#-----------------------------------------------------
    delete:
      security:
        - OAuth2Security:
          - apim:mediation_policy_create
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -X DELETE -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/admin/v0.16/policies/mediation/2253cf01-0356-4cc1-9941-3034a8c29007"
      summary: Delete a Global Mediation Policy
      description: |
        This operation can be used to delete an existing global mediation policy providing the Id of the mediation policy.
      parameters:
        - $ref: '#/parameters/mediationPolicyId'
        - $ref: '#/parameters/If-Match'
        - $ref: '#/parameters/If-Unmodified-Since'
      tags:
        - Mediation Policy (Individual)
      responses:
        200:
          description: |
            OK.
            Mediation policy successfully deleted.
        403:
          description: |
            Forbidden.
            The request must be conditional but no condition has been specified.
          schema:
            $ref: '#/definitions/Error'
        404:
          $ref: '#/responses/NotFound'
        412:
          $ref: '#/responses/PreconditionFailed'

#-----------------------------------------------------
# Update the a mediation policy
#-----------------------------------------------------
    put:
      security:
        - OAuth2Security:
          - apim:mediation_policy_create
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -X PUT -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" -H "Content-Type: application/json" -d @data.json "https://127.0.0.1:9443/api/am/admin/v0.16/policies/mediation/2253cf01-0356-4cc1-9941-3034a8c29007"
      summary: Update a Global Mediation Policy
      description: |
        This operation can be used to update an existing global mediation policy.
      parameters:
        - $ref: '#/parameters/mediationPolicyId'
        - in: body
          name: body
          description: |
            Mediation policy object that needs to be added
          required: true
          schema:
            $ref: '#/definitions/Mediation'
        - $ref: '#/parameters/Content-Type'
        - $ref: '#/parameters/If-Match'
        - $ref: '#/parameters/If-Unmodified-Since'
      tags:
        - Mediation Policy (Individual)
      responses:
        200:
          description: |
            OK.
            Successful response with updated mediation policy object
          schema:
            $ref: '#/definitions/Mediation'
          headers:
            Location:
              description: |
                The URL of the newly created resource.
              type: string
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
        400:
          $ref: '#/responses/BadRequest'
        403:
          description: |
            Forbidden.
            The request must be conditional but no condition has been specified.
          schema:
            $ref: '#/definitions/Error'
        404:
          $ref: '#/responses/NotFound'
        412:
          $ref: '#/responses/PreconditionFailed'
######################################################
# The "Subscription Throttling Policy Collection" resource API
######################################################
  '/throttling/policies/subscription':

#-----------------------------------------------------
# Retrieve all Subscription level policies
#-----------------------------------------------------
    get:
      security:
        - OAuth2Security:
          - apim:tier_view
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/admin/v0.16/throttling/policies/subscription"
      summary: Get all Subscription Throttling Policies
      description: |
        This operation can be used to retrieve all Subscription level throttling policies.
      parameters:
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/If-None-Match'
        - $ref: '#/parameters/If-Modified-Since'
      tags:
        - Subscription Policy (Collection)
      responses:
        200:
          description: |
            OK.
            Policies returned
          schema:
            $ref: '#/definitions/SubscriptionThrottlePolicyList'
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
        304:
          description: |
            Not Modified.
            Empty body because the client has already the latest version of the requested resource (Will be supported in future).
        406:
          $ref: '#/responses/NotAcceptable'

#-----------------------------------------------------
# Add a Subscription level Throttling Policy
#-----------------------------------------------------
    post:
      security:
        - OAuth2Security:
          - apim:tier_manage
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -X POST -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" -H "Content-Type: application/json" -d @data.json "https://127.0.0.1:9443/api/am/admin/v0.16/throttling/policies/subscription"
      summary: Add a Subscription Throttling Policy
      description: |
        This operation can be used to add a Subscription level throttling policy specifying the details of the policy in the payload.
      parameters:
        - in: body
          name: body
          description: |
            Subscripion level policy object that should to be added
          required: true
          schema:
            $ref: '#/definitions/SubscriptionThrottlePolicy'
        - $ref: '#/parameters/Content-Type'
      tags:
        - Subscription Policy (Collection)
      responses:
        201:
          description: |
            Created.
            Successful response with the newly created object as entity in the body.
            Location header contains URL of newly created entity.
          schema:
            $ref: '#/definitions/SubscriptionThrottlePolicy'
          headers:
            Location:
              description: |
                Location of the newly created Policy object.
              type: string
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
        400:
          $ref: '#/responses/BadRequest'
        415:
          description: |
            Unsupported media type.
            The entity of the request was in a not supported format.
        409:
          $ref: '#/responses/Conflict'
        500:
          $ref: '#/responses/InternalServerError'

######################################################
# The "Individual Subscription Throttling Policy" resource API
######################################################
  '/throttling/policies/subscription/{policyId}':

#-----------------------------------------------------
# Retrieve a certain Subscription Policy
#-----------------------------------------------------
    get:
      security:
        - OAuth2Security:
          - apim:tier_view
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/admin/v0.16/throttling/policies/subscription/c948c723-71dd-4d50-8c77-0a0e99c8cbb1"
      summary: Get a Subscription Policy
      description: |
        Retrieve a single subscription-level throttling policy. We should provide the Id of the policy as a path parameter.
      parameters:
        - $ref: '#/parameters/policyId'
        - $ref: '#/parameters/If-None-Match'
        - $ref: '#/parameters/If-Modified-Since'
      tags:
        - Subscription Policy (Individual)
      responses:
        200:
          description: |
            OK.
            Policy returned
          schema:
            $ref: '#/definitions/SubscriptionThrottlePolicy'
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
        304:
          description: |
            Not Modified.
            Empty body because the client has already the latest version of the requested resource (Will be supported in future).
        404:
          $ref: '#/responses/NotFound'
        406:
          $ref: '#/responses/NotAcceptable'

#-----------------------------------------------------
# Delete a Subscription level throttling policy
#-----------------------------------------------------
    delete:
      security:
        - OAuth2Security:
          - apim:tier_manage
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -X DELETE -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/admin/v0.16/throttling/policies/subscription/c948c723-71dd-4d50-8c77-0a0e99c8cbb1"
      summary: Delete a Subscription Policy
      description: |
        This operation can be used to delete a subscription-level throttling policy specifying the Id of the policy as a path paramter.
      parameters:
        - $ref: '#/parameters/policyId'
        - $ref: '#/parameters/If-Match'
        - $ref: '#/parameters/If-Unmodified-Since'
      tags:
        - Subscription Policy (Individual)
      responses:
        200:
          description: |
            OK.
            Resource successfully deleted.
        404:
          $ref: '#/responses/NotFound'
        412:
          $ref: '#/responses/PreconditionFailed'

#-----------------------------------------------------
# Update a Subscription Throttling Policy
#-----------------------------------------------------
    put:
      security:
        - OAuth2Security:
          - apim:tier_manage
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -X PUT -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" -H "Content-Type: application/json" -d @data.json "https://127.0.0.1:9443/api/am/admin/v0.16/throttling/policies/subscription/c948c723-71dd-4d50-8c77-0a0e99c8cbb1"
      summary: Update a Subscription Policy
      description: |
        Updates an existing subscription-level throttling policy.
      parameters:
        - $ref: '#/parameters/policyId'
        - in: body
          name: body
          description: |
            Policy object that needs to be modified
          required: true
          schema:
            $ref: '#/definitions/SubscriptionThrottlePolicy'
        - $ref: '#/parameters/Content-Type'
        - $ref: '#/parameters/If-Match'
        - $ref: '#/parameters/If-Unmodified-Since'
      tags:
        - Subscription Policy (Individual)
      responses:
        200:
          description: |
            OK.
            Policy updated.
          schema:
            $ref: '#/definitions/SubscriptionThrottlePolicy'
          headers:
            Location:
              description: |
                The URL of the newly created resource.
              type: string
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
        400:
          $ref: '#/responses/BadRequest'
        404:
          $ref: '#/responses/NotFound'
        412:
          $ref: '#/responses/PreconditionFailed'

######################################################
# The "Custom Rule Collection" resource API
######################################################
  '/throttling/policies/custom':

#-----------------------------------------------------
# Retrieve all Custom Rules
#-----------------------------------------------------
    get:
      security:
        - OAuth2Security:
          - apim:tier_view
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/admin/v0.16/throttling/policies/custom"
      summary: Get all Custom Rules
      description: |
        Retrieves all Custom Rules.

        **NOTE:**
        * Only super tenant users are allowed for this operation.
      parameters:
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/If-None-Match'
        - $ref: '#/parameters/If-Modified-Since'
      tags:
        - Custom Rules (Collection)
      responses:
        200:
          description: |
            OK.
            Policies returned
          schema:
            $ref: '#/definitions/CustomRuleList'
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
        304:
          description: |
            Not Modified.
            Empty body because the client has already the latest version of the requested resource (Will be supported in future).
        406:
          $ref: '#/responses/NotAcceptable'

#-----------------------------------------------------
# Add a Custom Rule
#-----------------------------------------------------
    post:
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -X POST -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" -H "Content-Type: application/json" -d @data.json "https://127.0.0.1:9443/api/am/admin/v0.16/throttling/policies/custom"
      security:
        - OAuth2Security:
          - apim:tier_manage
      summary: Add a Custom Rule
      description: |
        Adds a new Custom Rule.

        **NOTE:**
        * Only super tenant users are allowed for this operation.
      parameters:
        - in: body
          name: body
          description: |
            Custom Rule object that should to be added
          required: true
          schema:
            $ref: '#/definitions/CustomRule'
        - $ref: '#/parameters/Content-Type'
      tags:
        - Custom Rules (Collection)
      responses:
        201:
          description: |
            Created.
            Successful response with the newly created object as entity in the body.
            Location header contains URL of newly created entity.
          schema:
            $ref: '#/definitions/CustomRule'
          headers:
            Location:
              description: |
                Location of the newly created resource.
              type: string
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
        400:
          $ref: '#/responses/BadRequest'
        415:
          description: |
            Unsupported media type.
            The entity of the request was in a not supported format.

######################################################
# The "Individual Custom Rule" resource API
######################################################
  '/throttling/policies/custom/{ruleId}':

#-----------------------------------------------------
# Retrieve a certain Custom Rule
#-----------------------------------------------------
    get:
      security:
        - OAuth2Security:
          - apim:tier_view
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/admin/v0.16/throttling/policies/custom/33662a62-8db1-4d75-af08-afd63c6bd0b4"
      summary: Get a Custom Rule
      description: |
        Retrieves a Custom Rule. We need to provide the policy Id as a path parameter.

        **NOTE:**
        * Only super tenant users are allowed for this operation.
      parameters:
        - $ref: '#/parameters/ruleId'
        - $ref: '#/parameters/If-None-Match'
        - $ref: '#/parameters/If-Modified-Since'
      tags:
        - Custom Rules (Individual)
      responses:
        200:
          description: |
            OK.
            Policy returned
          schema:
            $ref: '#/definitions/CustomRule'
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
        304:
          description: |
            Not Modified.
            Empty body because the client has already the latest version of the requested resource (Will be supported in future).
        404:
          $ref: '#/responses/NotFound'
        406:
          $ref: '#/responses/NotAcceptable'

#-----------------------------------------------------
# Delete a Custom Rule
#-----------------------------------------------------
    delete:
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -X DELETE -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/admin/v0.16/throttling/policies/custom/33662a62-8db1-4d75-af08-afd63c6bd0b4"
      security:
        - OAuth2Security:
          - apim:tier_manage
      summary: Delete a Custom Rule
      description: |
        Delete a Custom Rule. We need to provide the Id of the policy as a path parameter.

        **NOTE:**
        * Only super tenant users are allowed for this operation.
      parameters:
        - $ref: '#/parameters/ruleId'
        - $ref: '#/parameters/If-Match'
        - $ref: '#/parameters/If-Unmodified-Since'
      tags:
        - Custom Rules (Individual)
      responses:
        200:
          description: |
            OK.
            Resource successfully deleted.
        404:
          $ref: '#/responses/NotFound'
        412:
          $ref: '#/responses/PreconditionFailed'

#-----------------------------------------------------
# Update a Custom Rule
#-----------------------------------------------------
    put:
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -X PUT -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" -H "Content-Type: application/json" -d @data.json "https://127.0.0.1:9443/api/am/admin/v0.16/throttling/policies/custom/33662a62-8db1-4d75-af08-afd63c6bd0b4"
      security:
        - OAuth2Security:
          - apim:tier_manage
      summary: Update a Custom Rule
      description: |
        Updates an existing Custom Rule.

        **NOTE:**
        * Only super tenant users are allowed for this operation.
      parameters:
        - $ref: '#/parameters/ruleId'
        - in: body
          name: body
          description: |
            Policy object that needs to be modified
          required: true
          schema:
            $ref: '#/definitions/CustomRule'
        - $ref: '#/parameters/Content-Type'
        - $ref: '#/parameters/If-Match'
        - $ref: '#/parameters/If-Unmodified-Since'
      tags:
        - Custom Rules (Individual)
      responses:
        200:
          description: |
            OK.
            Policy updated.
          schema:
            $ref: '#/definitions/CustomRule'
          headers:
            Location:
              description: |
                The URL of the newly created resource.
              type: string
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
        400:
          $ref: '#/responses/BadRequest'
        404:
          $ref: '#/responses/NotFound'
        412:
          $ref: '#/responses/PreconditionFailed'


######################################################
# The "Advanced Throttling Policy Collection" resource API
######################################################
  '/throttling/policies/advanced':

#-----------------------------------------------------
# Retrieve all Advanced level policies
#-----------------------------------------------------
    get:
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/admin/v0.16/throttling/policies/advanced"
      security:
        - OAuth2Security:
          - apim:tier_view
      summary: Get All Advanced Throttling Policies.
      description: |
        Retrieves all existing Advanced level throttling policies.
      parameters:
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/If-None-Match'
        - $ref: '#/parameters/If-Modified-Since'
      tags:
        - Advanced Policy (Collection)
      responses:
        200:
          description: |
            OK.
            Policies returned
          schema:
            $ref: '#/definitions/AdvancedThrottlePolicyList'
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
        304:
          description: |
            Not Modified.
            Empty body because the client has already the latest version of the requested resource (Will be supported in future).
        406:
          $ref: '#/responses/NotAcceptable'

#-----------------------------------------------------
# Add an Advanced level throttling policy
#-----------------------------------------------------
    post:
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -X POST -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" -H "Content-Type: application/json" -d @data.json "https://127.0.0.1:9443/api/am/admin/v0.16/throttling/policies/advanced"
      security:
        - OAuth2Security:
          - apim:tier_manage
      summary: Add an Advanced Throttling Policy
      description: |
        Add a new Advanced level throttling policy.
      parameters:
        - in: body
          name: body
          description: |
            Advanced level policy object that should to be added
          required: true
          schema:
            $ref: '#/definitions/AdvancedThrottlePolicy'
        - $ref: '#/parameters/Content-Type'
      tags:
        - Advanced Policy (Collection)
      responses:
        201:
          description: |
            Created.
            Successful response with the newly created object as entity in the body.
            Location header contains URL of newly created entity.
          schema:
            $ref: '#/definitions/AdvancedThrottlePolicy'
          headers:
            Location:
              description: |
                Location of the newly created Advanced Throttling Policy.
              type: string
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
        400:
          $ref: '#/responses/BadRequest'
        415:
          description: |
            Unsupported media type.
            The entity of the request was in a not supported format.

######################################################
# The "Individual Advanced Throttling Policy" resource API
######################################################
  '/throttling/policies/advanced/{policyId}':

#-----------------------------------------------------
# Retrieve a certain Advanced Throttling Policy
#-----------------------------------------------------
    get:
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/admin/v0.16/throttling/policies/advanced/229a3c46-c836-43c8-b988-8eebd9c7774b"
      security:
        - OAuth2Security:
          - apim:tier_view
      summary: Get an Advanced Policy
      description: |
        Retrieves an Advanced Policy.
      parameters:
        - $ref: '#/parameters/policyId'
        - $ref: '#/parameters/If-None-Match'
        - $ref: '#/parameters/If-Modified-Since'
      tags:
        - Advanced Policy (Individual)
      responses:
        200:
          description: |
            OK.
            Policy returned
          schema:
            $ref: '#/definitions/AdvancedThrottlePolicy'
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
        304:
          description: |
            Not Modified.
            Empty body because the client has already the latest version of the requested resource (Will be supported in future).
        404:
          $ref: '#/responses/NotFound'
        406:
          $ref: '#/responses/NotAcceptable'

#-----------------------------------------------------
# Delete an Advanced level throttling policy
#-----------------------------------------------------
    delete:
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -X DELETE -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/admin/v0.16/throttling/policies/advanced/229a3c46-c836-43c8-b988-8eebd9c7774b"
      security:
        - OAuth2Security:
          - apim:tier_manage
      summary: Delete an Advanced Throttling Policy
      description: |
        Deletes an Advanced level throttling policy.
      parameters:
        - $ref: '#/parameters/policyId'
        - $ref: '#/parameters/If-Match'
        - $ref: '#/parameters/If-Unmodified-Since'
      tags:
        - Advanced Policy (Individual)
      responses:
        200:
          description: |
            OK.
            Resource successfully deleted.
        404:
          $ref: '#/responses/NotFound'
        412:
          $ref: '#/responses/PreconditionFailed'

#-----------------------------------------------------
# Update an Advanced Throttling Policy
#-----------------------------------------------------
    put:
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -X PUT -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" -H "Content-Type: application/json" -d @data.json "https://127.0.0.1:9443/api/am/admin/v0.16/throttling/policies/advanced/229a3c46-c836-43c8-b988-8eebd9c7774b"
      security:
        - OAuth2Security:
          - apim:tier_manage
      summary: Update an Advanced Throttling Policy
      description: |
        Updates an existing Advanced level throttling policy.
      parameters:
        - $ref: '#/parameters/policyId'
        - in: body
          name: body
          description: |
            Policy object that needs to be modified
          required: true
          schema:
            $ref: '#/definitions/AdvancedThrottlePolicy'
        - $ref: '#/parameters/Content-Type'
        - $ref: '#/parameters/If-Match'
        - $ref: '#/parameters/If-Unmodified-Since'
      tags:
        - Advanced Policy (Individual)
      responses:
        200:
          description: |
            OK.
            Policy updated.
          schema:
            $ref: '#/definitions/AdvancedThrottlePolicy'
          headers:
            Location:
              description: |
                The URL of the newly created resource.
              type: string
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
        400:
          $ref: '#/responses/BadRequest'
        404:
          $ref: '#/responses/NotFound'
        412:
          $ref: '#/responses/PreconditionFailed'

######################################################
# The "Blocking Condition Collection" resource API
######################################################
  '/throttling/blacklist':

#-----------------------------------------------------
# Retrieve all Blocking conditions
#-----------------------------------------------------
    get:
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/admin/v0.16/throttling/policies/blacklist"
      security:
        - OAuth2Security:
          - apim:bl_view
      summary: Get All Blocking Condtions
      description: |
        Retrieves all existing blocking condtions.
      parameters:
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/If-None-Match'
        - $ref: '#/parameters/If-Modified-Since'
      tags:
        - Blacklist (Collection)
      responses:
        200:
          description: |
            OK.
            Blocking conditions returned
          schema:
            $ref: '#/definitions/BlockingConditionList'
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
        304:
          description: |
            Not Modified.
            Empty body because the client has already the latest version of the requested resource (Will be supported in future).
        406:
          $ref: '#/responses/NotAcceptable'

#-----------------------------------------------------
# Add a Custom Rule
#-----------------------------------------------------
    post:
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -X POST -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" -H "Content-Type: application/json" -d @data.json "https://127.0.0.1:9443/api/am/admin/v0.16/throttling/policies/blacklist"
      security:
        - OAuth2Security:
          - apim:bl_manage
      summary: Add a Blocking Condition
      description: |
        Adds a new Blocking condition.
      parameters:
        - in: body
          name: body
          description: |
            Blocking condition object that should to be added
          required: true
          schema:
            $ref: '#/definitions/BlockingCondition'
        - $ref: '#/parameters/Content-Type'
      tags:
        - Blacklist (Collection)
      responses:
        201:
          description: |
            Created.
            Successful response with the newly created object as entity in the body.
            Location header contains URL of newly created entity.
          schema:
            $ref: '#/definitions/BlockingCondition'
          headers:
            Location:
              description: |
                Location of the newly created resource.
              type: string
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
        400:
          $ref: '#/responses/BadRequest'
        415:
          description: |
            Unsupported media type.
            The entity of the request was in a not supported format.

######################################################
# The "Individual Blocking Condition" resource API
######################################################
  '/throttling/blacklist/{conditionId}':

#-----------------------------------------------------
# Retrieve a Blocking condition
#-----------------------------------------------------
    get:
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/admin/v0.16/throttling/policies/blacklist/b513eb68-69e8-4c32-92cf-852c101363c"
      security:
        - OAuth2Security:
          - apim:bl_view
      summary: Get a Blocking Condition
      description: |
        Retrieves a Blocking Condition providing the condition Id
      parameters:
        - $ref: '#/parameters/conditionId'
        - $ref: '#/parameters/If-None-Match'
        - $ref: '#/parameters/If-Modified-Since'
      tags:
        - Blacklist (Individual)
      responses:
        200:
          description: |
            OK.
            Condition returned
          schema:
            $ref: '#/definitions/BlockingCondition'
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
        304:
          description: |
            Not Modified.
            Empty body because the client has already the latest version of the requested resource (Will be supported in future).
        404:
          $ref: '#/responses/NotFound'
        406:
          $ref: '#/responses/NotAcceptable'

#-----------------------------------------------------
# Delete a Blocking condition
#-----------------------------------------------------
    delete:
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -X DELETE -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/admin/v0.16/throttling/policies/blacklist/b513eb68-69e8-4c32-92cf-852c101363c"
      security:
        - OAuth2Security:
          - apim:bl_manage
      summary: Delete a Blocking condition
      description: |
        Deletes an existing Blocking condition
      parameters:
        - $ref: '#/parameters/conditionId'
        - $ref: '#/parameters/If-Match'
        - $ref: '#/parameters/If-Unmodified-Since'
      tags:
        - Blacklist (Individual)
      responses:
        200:
          description: |
            OK.
            Resource successfully deleted.
        404:
          $ref: '#/responses/NotFound'
        412:
          $ref: '#/responses/PreconditionFailed'

######################################################
# The "Application Collection" resource APIs
######################################################
  /applications:

#-----------------------------------------------------
# Retrieve a list of all applications of a certain subscriber
#-----------------------------------------------------
    get:
      security:
        - OAuth2Security:
          - apim:app_owner_change
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/admin/v0.16/applications"
      summary: |
        Retrieve/Search Applications
      description: |
        This operation can be used to retrieve list of applications that is belonged to the given user, If no user 
        query is provided, the application(s) for the user associated with the Authorization Header will be returned
      parameters:
        - $ref: '#/parameters/user'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/offset'
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/If-None-Match'
        - name: tenantDomain
          in: query
          description: |
               Tenant domain of the applications to get. This has to be specified only if require to get applications of
               another tenant other than the requester's tenant. So, if not specified, the default will be set as the
               requester's tenant domain. This cross tenant Application access is allowed only for super tenant admin
               users only at a migration process.
          required: false
          type: string
        - name: applicationName
          in: query
          description: |
            Application Name
            Also can search by providing a part of an application name.
          required: false
          type: string
      tags:
        - Application (Collection)
      responses:
        200:
          description: |
            OK.
            Application list returned.
          schema:
            $ref: '#/definitions/ApplicationList'
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
        304:
          description: |
            Not Modified.
            Empty body because the client has already the latest version of the requested resource (Will be supported in future).
        400:
          $ref: '#/responses/BadRequest'
        406:
          $ref: '#/responses/NotAcceptable'



######################################################
# The "Application Collection" resource APIs
######################################################
  /applications/{applicationId}:

#-----------------------------------------------------
# Retrieve an application by application id
#-----------------------------------------------------
    get:
      x-scope: apim:app_owner_change
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/admin/v0.16/applications/890a4f4d-09eb-4877-a323-57f6ce2ed79b"
      summary: |
        Get Details of an Application
      description: |
        This operation can be used to retrieve an application by providing the application id.
      parameters:
        - $ref: '#/parameters/applicationId'
      tags:
        - Application
      responses:
        200:
          description: |
            OK.
            Application info returned.
          schema:
            $ref: '#/definitions/ApplicationInfo'
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
        400:
          description: |
            Bad Request.
            Invalid request or validation error.
          schema:
            $ref: '#/definitions/Error'
        404:
          description: |
            Not Found.
            Requested Application does not exist.
          schema:
            $ref: '#/definitions/Error'
        406:
          description: |
            Not Acceptable.
            The requested media type is not supported.
          schema:
            $ref: '#/definitions/Error'
        500:
          description: |
            Internal Server Error.
            Error in fetching Application.
          schema:
            $ref: '#/definitions/Error'



######################################################
# The "Change Owner" Function resource API
######################################################
  /applications/{applicationId}/change-owner:

#-----------------------------------------------------
# Change the owner of an Application
#-----------------------------------------------------
    post:
      security:
        - OAuth2Security:
          - apim:app_owner_change
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -X POST -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/admin/v0.16/applications/0a043c2b-ee75-4ef3-9e1c-fc2610ccfa8b/change-owner?owner=admin"
      summary: Change Application Owner
      description: |
        This operation is used to change the owner of an Application.
        In order to change the owner of an application, we need to pass the new application owner as a query parameter
      parameters:
        - name: owner
          in: query
          type: string
          required: true
        - $ref: '#/parameters/applicationId'

      tags:
        - Application
      responses:
        200:
          description: |
            OK.
            Application owner changed successfully.

        400:
          $ref: '#/responses/BadRequest'
        404:
          $ref: '#/responses/NotFound'
        412:
          $ref: '#/responses/PreconditionFailed'

######################################################
# Export Application Resource API
######################################################
  /export/applications:

    get:
      security:
        - OAuth2Security:
          - apim:app_import_export
      produces:
        - application/json
        - application/zip
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/admin/v0.16/export/applications?appName=sampleApp&appOwner=admin&withKeys=true" > exported-application.zip
      summary: Export an Application
      description: |
        This operation can be used to export the details of a particular Application as a zip file.
      parameters:
        - name: appName
          in: query
          description: |
            Application Name
          required: true
          type: string
        - name: appOwner
          in: query
          description: |
            Owner of the Application
          required: true
          type: string
        - name: withKeys
          in: query
          description: |
            Export application keys
          required: false
          type: boolean
      tags:
        - Application (Individual)
      responses:
        200:
          description: |
            OK.
            Export Successful.
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
          schema:
            type: file
        400:
          $ref: '#/responses/BadRequest'
        404:
          $ref: '#/responses/NotFound'
        406:
          $ref: '#/responses/NotAcceptable'

######################################################
# Import Application Resource API
######################################################
  /import/applications:

    post:
      security:
        - OAuth2Security:
          - apim:app_import_export
      consumes:
        - multipart/form-data
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -X POST -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" -F file=@exported-application.zip "https://127.0.0.1:9443/api/am/admin/v0.16/import/applications?preserveOwner=true&skipSubscriptions=false&appOwner=admin&skipApplicationKeys=false&update=true"
      summary: Import an Application
      description: |
        This operation can be used to import an Application.
      parameters:
        - name: file
          in: formData
          description: |
            Zip archive consisting of exported Application Configuration.
          required: true
          type: file
        - name: preserveOwner
          in: query
          description: |
            Preserve Original Creator of the Application
          required: false
          type: boolean
        - name: skipSubscriptions
          in: query
          description: |
            Skip importing Subscriptions of the Application
          required: false
          type: boolean
        - name: appOwner
          in: query
          description: |
            Expected Owner of the Application in the Import Environment
          type: string
        - name: skipApplicationKeys
          in: query
          description: |
            Skip importing Keys of the Application
          required: false
          type: boolean
        - name: update
          in: query
          description: |
            Update if application exists
          required: false
          type: boolean
      tags:
        - Application (Individual)
      responses:
        200:
          description: |
            OK.
            Successful response with the updated object information as entity in the body.
          schema:
            $ref: '#/definitions/ApplicationInfo'
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
        207:
          description: |
            Multi Status.
            Partially successful response with skipped APIs information object as entity in the body.
          schema:
            $ref: '#/definitions/APIInfoList'
        400:
          $ref: '#/responses/BadRequest'
        406:
          $ref: '#/responses/NotAcceptable'
######################################################
# Import Resource API
######################################################
  /import/api:

    post:
      security:
        - OAuth2Security:
          - apim:api_import_export
      consumes:
        - multipart/form-data
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -X POST -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" -F file=@admin-PizzaShackAPI-1.0.0.zip "https://127.0.0.1:9443/api/am/admin/v0.16/import/api?preserveProvider=false&overwrite=false"
      summary: Import an API
      description: |
        This operation can be used to import an API.
      parameters:
        - name: file
          in: formData
          description: |
            Zip archive consisting on exported api configuration
          required: true
          type: file
        - name: preserveProvider
          in: query
          description: |
            Preserve Original Provider of the API. This is the user choice to keep or replace the API provider.
          required: false
          type: boolean
        - name: overwrite
          in: query
          description: |
            Whether to update the API or not. This is used when updating already existing APIs.
          required: false
          type: boolean
      tags:
        - API (Individual)
      responses:
        200:
          description: |
            Created.
            API Imported Successfully.
        403:
          description: |
            Forbidden
            Not Authorized to import.
          schema:
            $ref: '#/definitions/Error'
        404:
          $ref: '#/responses/NotFound'
        409:
          $ref: '#/responses/Conflict'
        500:
          $ref: '#/responses/InternalServerError'

######################################################
# Export Resource API
######################################################
  /export/api:

    get:
      security:
        - OAuth2Security:
          - apim:api_import_export
      produces:
        - application/zip
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/admin/v0.16/export/api?name=PizzaShackAPI&version=1.0.0&providerName=admin&format=YAML&preserveStatus=true" > exportAPI.zip
      summary: Export an API
      description: |
        This operation can be used to export the details of a particular API as a zip file.
      parameters:
        - name: name
          in: query
          description: |
            API Name
          required: true
          type: string
        - name: version
          in: query
          description: |
            Version of the API
          required: true
          type: string
        - name: providerName
          in: query
          description: |
            Provider name of the API
          required: false
          type: string
        - name: format
          in: query
          description: |
            Format of output documents. Can be YAML or JSON.
          type: string
          enum:
            - JSON
            - YAML
          required: true
        - name: preserveStatus
          in: query
          description: |
            Preserve API Status on export
          required: false
          type: boolean
      tags:
        - API (Individual)
      responses:
        200:
          description: |
            OK.
            Export Successful.
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
          schema:
            type: file
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalServerError'

####################################################
# The "Label" resource API
######################################################
  /labels:

#-----------------------------------------------------
# Retrieve all labels
#-----------------------------------------------------
    get:
      security:
        - OAuth2Security:
          - apim:label_read
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/admin/v0.16/labels"
      summary: Get all registered Labels
      description: |
        Get all registered Labels
      tags:
        - Label Collection
      responses:
        200:
          description: |
            OK.
            Labels returned
          schema:
            $ref: '#/definitions/LabelList'

#-----------------------------------------------------
# Add a Label
#-----------------------------------------------------
    post:
      security:
        - OAuth2Security:
          - apim:label_manage
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -X POST -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" -H "Content-Type: application/json" -d @data.json "https://127.0.0.1:9443/api/am/admin/v0.16/labels"
      summary: Add a Label
      description: |
        Add a new gateway Label
      parameters:
        - in: body
          name: body
          description: |
            Label object that should to be added
          required: true
          schema:
            $ref: '#/definitions/Label'
      tags:
        - Label
      responses:
        201:
          description: |
            Created.
            Successful response with the newly created object as entity in the body.
          schema:
            $ref: '#/definitions/Label'
        400:
          $ref: '#/responses/BadRequest'

######################################################
# The BotDetectedData API resources
######################################################

  #-----------------------------------------------------
  # Get configured email list
  #-----------------------------------------------------
  /botData/getEmailList:

    get:
      security:
        - OAuth2Security:
          - apim:bot_data
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/admin/v0.16/botData/getEmailList"
      produces:
        - application/json
      summary: |
        Get All Configured Email List
      description: |
        Get all email list which configured to trigger for BotData api email alert
      parameters:
        - name: tenantDomain
          in: query
          description: |
            Pass the tenantDomain to get the email list and if not passed it will get from the logged user.
          required: false
          type: string
      responses:
        200:
          description: |
            OK.
            Export Successful.
        400:
          description: |
            Bad Request.messageID
            Invalid request or validation error
          schema:
            $ref: '#/definitions/Error'
        404:
          $ref: '#/responses/NotFound'
        406:
          $ref: '#/responses/NotAcceptable'
#-----------------------------------------------------
  # Delete email
#-----------------------------------------------------
  /botData/deleteEmail:

    delete:
      security:
        - OAuth2Security:
          - apim:bot_data
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -X DELETE -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/admin/v0.16/botData/deleteEmail?uuid=23a2a896-bd58-46ec-83c7-2f2b5cc09284"
      summary: Delete an configured email.
      description: |
        Delete a Configured Email from DB by Pasing UUID
      parameters:
        - name: uuid
          in: query
          description: |
            Pass the uuid to remove the email
          required: true
          type: string
      responses:
        200:
          description: |
            OK.
            Email successfully deleted.
        404:
          $ref: '#/responses/NotFound'
        412:
          $ref: '#/responses/PreconditionFailed'
#-----------------------------------------------------
  # Add email
#-----------------------------------------------------
  /botData/addEmail:

    post:
      security:
        - OAuth2Security:
          - apim:bot_data
      summary: Add an Email
      description: |
          Here we can use this to configure email
      parameters:
        - in: body
          name: body
          description: |
              A email
          required: true
          schema:
            $ref: '#/definitions/Email'
      responses:
        200:
          description: |
            OK.
            Email List updated.
          schema:
            $ref: '#/definitions/Email'
        400:
          description: |
            Bad Request.
            Invalid request or validation error.
          schema:
            $ref: '#/definitions/Error'
        404:
          $ref: '#/responses/NotFound'

######################################################
# The "Individual label" resource APIs
######################################################

  /labels/{labelId}:

#-----------------------------------------------------
# Update a Label
#-----------------------------------------------------
    put:
      security:
        - OAuth2Security:
          - apim:label_manage
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -X PUT -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" -H "Content-Type: application/json" -d @data.json "https://127.0.0.1:9443/api/am/admin/v0.16/labels/d7cf8523-9180-4255-84fa-6cb171c1f779"
      summary: Update a Label
      description: |
        Update a Label by label Id
      parameters:
        - $ref: '#/parameters/labelId'
        - in: body
          name: body
          description: |
            Label object with updated information
          required: true
          schema:
            $ref: '#/definitions/Label'
      tags:
        - Label
      responses:
        200:
          description: |
            OK.
            Label updated.
          schema:
            $ref: '#/definitions/Label'
        400:
          description: |
            Bad Request.
            Invalid request or validation error.
          schema:
            $ref: '#/definitions/Error'
        404:
          $ref: '#/responses/NotFound'
#-----------------------------------------------------
# Delete a Label
#-----------------------------------------------------
    delete:
      security:
        - OAuth2Security:
          - apim:label_manage
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -X DELETE -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/admin/v0.16/labels/d7cf8523-9180-4255-84fa-6cb171c1f779"
      summary: Delete a Label
      description: |
        Delete a Label by label Id
      parameters:
        - $ref: '#/parameters/labelId'
        - $ref: '#/parameters/If-Match'
        - $ref: '#/parameters/If-Unmodified-Since'
      tags:
        - Label
      responses:
        200:
          description: |
            OK.
            Label successfully deleted.
        404:
          $ref: '#/responses/NotFound'


  ######################################################
  # The "Monetization" resource APIs
  ######################################################

  /monetization/publish-usage:

    #-----------------------------------------------------
    # Publish monetization related usage records
    #-----------------------------------------------------
    post:
      x-wso2-curl: "curl -k -H \"Authorization: Bearer 0c6439fd-9b16-3c2e-be6e-1086e0b9aa93\" -X POST -H \"Content-Type: application/json\" https://localhost:9443/api/am/admin/v0.16/monetization/publish-usage"
      x-wso2-request: "POST https://localhost:9443/api/am/admin/v0.16/monetization/publish-usage\r\nAuthorization: Bearer 0c6439fd-9b16-3c2e-be6e-1086e0b9aa93\r\nContent-Type: application/json"
      x-wso2-response: "HTTP/1.1 200 OK\r\nContent-Type: application/json\r\n\r\n{\r\n\"status\":\"successfull\",\r\n\"message\":\"Records published successfully\"\r\n}"
      security:
        - OAuth2Security:
          - apim:monetization_usage_publish
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -X POST -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/admin/v0.16/monetization/publish-usage"
      summary: Publish Usage Records
      description: |
        Publish Usage Records of Monetized APIs
      tags:
        - Monetization (Collection)
      responses:
        200:
          description: Usage records successfully published.
          schema:
            $ref: '#/definitions/PublishStatus'
        202:
          description: Request is sucessfully accepted for processing.
          schema:
            $ref: '#/definitions/PublishStatus'
        404:
          $ref: '#/responses/NotFound'
        500:
          description: Internal Server Error
          schema:
            $ref: '#/definitions/PublishStatus'


  /monetization/publish-usage/status:

    #-----------------------------------------------------
    # Retrieve the status monetization usage publsih job
    #-----------------------------------------------------
    get:
      security:
        - OAuth2Security:
          - apim:monetization_usage_publish
      x-wso2-request: |
        GET https://localhost:9443/api/am/admin/v0.16/monetization/publish-usage/status
        Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8
      x-wso2-curl: "curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\" \"https://localhost:9443/api/am/admin/v0.16/monetization/publish-usage/status\""
      x-wso2-response: "HTTP/1.1 200 OK\r\nContent-Type: application/json\r\n\r\n{\r\n  \"state\": \"RUNNING\",\r\n ,\"status\":\"SUCCESSFULL\",\r\n, \"started time\":\"12345678056L\",\r\n, \"last published time\":\"12345678056L\",\r\n}"
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/admin/v0.16/monetization/publish-usage/status"
      summary: Get the status of Monetization usage publisher
      description: |
        Get the status of Monetization usage publisher
      tags:
        - Monetization (Collection)
      responses:
        200:
          description: |
            OK.
            Status returned
          schema:
            $ref: '#/definitions/MonetizationUsagePublishInfo'

######################################################
  # The "Workflow approval" resource API
  ######################################################
  /workflows/update-workflow-status:

    #-------------------------------------------------------------------
    # Resume the workflow by approving or rejecting the workflow request
    #-------------------------------------------------------------------
    post:
      security:
        - OAuth2Security:
          - apim:api_workflow
      x-wso2-curl: "curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\" -H \"Content-Type: application/json\" -X POST -d @data.json \"https://localhost:9443/api/am/publisher/v0.16/workflows/update-workflow-status?workflowReferenceId=56e3a170-a7a7-45f8-b051-7e43a58a67e1\""
      x-wso2-request: "POST https://localhost:9443/api/am/publisher/v0.16/workflows/update-workflow-status?workflowReferenceId=56e3a170-a7a7-45f8-b051-7e43a58a67e1\nAuthorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\nContent-Type: application/json\n\n{\n   \"status\" : \"APPROVED\",\n   \"attributes\" : {\n      \"apiCurrentState\": \"Created\",\n      \"apiLCAction\": \"Publish\",\n      \"apiName\":\"APIname\",\n      \"apiVersion\" : \"1.0.0\",\n      \"apiProvider\" : \"admin\",\n      \"invoker\": \"admin\"\n   }\n}"
      x-wso2-response: "HTTP/1.1 200 OK"
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -X POST -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" -H "Content-Type: application/json" -d @data.json "https://127.0.0.1:9443/api/am/admin/v0.16/workflows/update-workflow-status?workflowReferenceId=56e3a170-a7a7-45f8-b051-7e43a58a67e1"
      summary: Update workflow status
      description: |
        This operation can be used to approve or reject a workflow task.
      parameters:
        - $ref: '#/parameters/workflowReferenceId-Q'
        - in: body
          name: body
          description: |
            Workflow event that need to be updated
          required: true
          schema:
            $ref: '#/definitions/Workflow'
      tags:
        - Workflows (Individual)
      responses:
        200:
          description: |
            OK.
            Workflow request information is returned.
          schema:
            $ref: '#/definitions/Workflow'
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
        400:
          description: |
            Bad Request.
            Invalid request or validation error.
          schema:
            $ref: '#/definitions/Error'
        404:
          $ref: '#/responses/NotFound'

  ######################################################
  # The Tenant Info resource API
  ######################################################
  /tenant-info/{username}:
    #--------------------------------------------------------
    # Retrieve tenant information of the given username
    #--------------------------------------------------------
    get:
      security:
        - OAuth2Security:
          - apim:tenantInfo
      x-wso2-curl: "curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\" -H \"Content-Type: application/json\" -X GET \"https://localhost:9443/api/am/admin/v0.16/tenant-info/john/info\""
      x-wso2-request: "GET https://localhost:9443/api/am/admin/v0.16/tenant-info/john\nAuthorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\nContent-Type: application/json\n\n{\n   \"tenantDomain\" : \"carbon.super\",\n   \"tenantId\" : -1234 \n}"
      x-wso2-response: "HTTP/1.1 200 OK"
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/admin/v0.16/tenant-info/john"
      summary: |
        Get tenant id of the user
      description: |
        This operation is to get tenant id of the provided user
      operationId: getTenantInfoByUsername
      parameters:
        - name: username
          description: |
            The state represents the current state of the tenant

            Supported states are [ active, inactive]
          in: path
          type: string
          required: true
          default: 'john'
      tags:
        - Tenants
      responses:
        200:
          description: |
            OK.
            Tenant id of the user retrieved.
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
          schema:
            $ref: '#/definitions/TenantInfo'
        404:
          $ref: '#/responses/NotFound'
        406:
          $ref: '#/responses/NotAcceptable'

  ######################################################
  # The Custom URL Info resource API
  ######################################################
  /custom-urls/{tenantDomain}:
    #----------------------------------------------------------
    # Retrieve custom url information of the given tenant domain
    #----------------------------------------------------------
    get:
      security:
        - OAuth2Security:
          - apim:tenantInfo
      x-wso2-curl: "curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\" -H \"Content-Type: application/json\" -X GET \"https://localhost:9443/api/am/admin/v0.16/custom-url/foo.com\""
      x-wso2-request: "GET https://localhost:9443/api/am/admin/v0.16/custom-url/foo.com\nAuthorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\nContent-Type: application/json\n\n{\n   \"tenantDomain\" : \"foo.com\",\n}"
      x-wso2-response: "HTTP/1.1 200 OK"
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/admin/v0.16/custom-urls/wso2.com"
      summary: |
        Get custom-url info of a tenant domain
      description: |
        This operation is to get custom-url information of the provided tenant-domain
      operationId: getCustomUrlInfoByTenantDomain
      parameters:
        - name: tenantDomain
          description: |
            The tenant domain name.
          in: path
          type: string
          required: true
      tags:
        - Tenants
      responses:
        200:
          description: |
            OK.
            Custom url info of the tenant is retrieved.
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
          schema:
            $ref: '#/definitions/CustomUrlInfo'
        404:
          $ref: '#/responses/NotFound'
        406:
          $ref: '#/responses/NotAcceptable'

######################################################
# The "Category Collection" resource API
######################################################
  /api-categories:

#-----------------------------------------------------
# Retrieve all categories
#-----------------------------------------------------
    get:
      security:
        - OAuth2Security:
          - apim:admin_operations
      x-wso2-request: |
              GET https://localhost:9443/api/am/admin/v0.16/api-categories
              Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8
      x-wso2-curl: "curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\" \"https://localhost:9443/api/am/admin/v0.16/api-categories\""
      x-wso2-response: "HTTP/1.1 200 OK\r\nContent-Type: application/json\r\n\r\n{\r\n   \"count\":1,\r\n   \"list\":[\r\n      {\r\n         \"id\":\"463e2c9f-5e99-43c3-a66e-de7e0f367373\",\r\n         \"name\":\"Finance\",\r\n         \"description\":\"Finance related APIS\"\r\n      }\r\n   ]\r\n}"
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/admin/v0.16/api-categories"
      summary: Get all API categories
      description: |
        Get all API categories
      tags:
        - API Category (Collection)
      responses:
        200:
          description: |
            OK.
            Categories returned
          schema:
            $ref: '#/definitions/APICategoryList'

#-----------------------------------------------------
# Add a Category
#-----------------------------------------------------
    post:
      security:
        - OAuth2Security:
          - apim:admin_operations
      x-wso2-curl: "curl -k -X POST -H \"Authorization: Bearer 0d63e133-7ad6-3aeb-9ca9-9299e0708122\" -H \"Content-Type: application/json\" https://apis.wso2.com/api/am/admin/v0.16/api-categories -d @data.json"
      x-wso2-request: "POST https://localhost:9443/api/am/admin/v0.16/api-categories\r\nAuthorization: Bearer 0d63e133-7ad6-3aeb-9ca9-9299e0708122\r\nContent-Type: application/json\r\n\r\n -d  {\r\n         \"name\":\"Finance\",\r\n         \"description\":\"Finance related APIS\"\r\n }"
      x-wso2-response: "HTTP/1.1 201 Created\r\nContent-Type: application/json\r\n\r\n{\r\n   \"count\":1,\r\n   \"list\":[\r\n      {\r\n         \"id\":\"463e2c9f-5e99-43c3-a66e-de7e0f367373\",\r\n         \"name\":\"Finance\",\r\n         \"description\":\"Finance related APIS\"\r\n      }\r\n   ]\r\n}"
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -X POST -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" -H "Content-Type: application/json" -d @data.json "https://127.0.0.1:9443/api/am/admin/v0.16/api-categories"
      summary: Add a new API Category
      description: |
        Add a new API Category
      parameters:
        - in: body
          name: body
          description: |
            API Category object that should to be added
          required: true
          schema:
            $ref: '#/definitions/APICategory'
      tags:
        - API Category (Individual)
      responses:
        201:
          description: |
            Created.
            Successful response with the newly created object as entity in the body.
          schema:
            $ref: '#/definitions/APICategory'
        400:
          description: |
            Bad Request.
            Invalid request or validation error
          schema:
            $ref: '#/definitions/Error'

  ######################################################
  # The "Individual Category" resource APIs
  ######################################################

  /api-categories/{apiCategoryId}:

  #-----------------------------------------------------
  # Update a Category
  #-----------------------------------------------------
    put:
      security:
        - OAuth2Security:
          - apim:admin_operations
      x-wso2-curl: "curl -k -X PUT -H \"Authorization: Bearer 0d63e133-7ad6-3aeb-9ca9-9299e0708122\" -H \"Content-Type: application/json\" https://localhost:9443/api/am/admin/v0.16/api-categories/d7cf8523-9180-4255-84fa-6cb171c1f779 -d @data.json"
      x-wso2-request: "PUT https://localhost:9443/api/am/admin/v0.16/api-categories/d7cf8523-9180-4255-84fa-6cb171c1f779\r\nAuthorization: Bearer 0d63e133-7ad6-3aeb-9ca9-9299e0708122\r\nContent-Type: application/json\r\n\r\n   {\r\n       \"name\":\"update_internal\",\r\n	\"description\":\"Updated label used for internal purpose\",\r\n	\"accessUrls\":[\r\n	  \"https://localhost:9095\"\r\n         ]\r\n     }"
      x-wso2-response: "HTTP/1.1 200 Ok\r\nContent-Type: application/json\r\n\r\n{\r\n   \"count\":1,\r\n   \"list\":[\r\n      {\r\n         \"id\":\"463e2c9f-5e99-43c3-a66e-de7e0f367373\",\r\n         \"name\":\"Finance\",\r\n         \"description\":\"Finance related APIS\"\r\n      }\r\n   ]\r\n}"
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -X PUT -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" -H "Content-Type: application/json" -d @data.json "https://127.0.0.1:9443/api/am/admin/v0.16/api-categories/d7cf8523-9180-4255-84fa-6cb171c1f779"
      summary: Update an API Category
      description: |
        Update an API Category by category Id
      parameters:
        - $ref: '#/parameters/apiCategoryId'
        - in: body
          name: body
          description: |
            API Category object with updated information
          required: true
          schema:
            $ref: '#/definitions/APICategory'
      tags:
        - API Category (Individual)
      responses:
        200:
          description: |
            OK.
            Label updated.
          schema:
            $ref: '#/definitions/APICategory'
        400:
          description: |
            Bad Request.
            Invalid request or validation error.
          schema:
            $ref: '#/definitions/Error'
        404:
          $ref: '#/responses/NotFound'
  #-----------------------------------------------------
  # Delete an API Category
  #-----------------------------------------------------
    delete:
      security:
        - OAuth2Security:
          - apim:admin_operations
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -X DELETE -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/admin/v0.16/api-categories/d7cf8523-9180-4255-84fa-6cb171c1f779"
      summary: Delete an API Category
      description: |
        Delete an API Category by API Category Id
      parameters:
        - $ref: '#/parameters/apiCategoryId'
        - $ref: '#/parameters/If-Match'
        - $ref: '#/parameters/If-Unmodified-Since'
      tags:
        - API Category (Individual)
      responses:
        200:
          description: |
            OK.
            API Category successfully deleted.
        404:
          $ref: '#/responses/NotFound'

######################################################
# Parameters - required by some of the APIs above
######################################################
parameters:

# Label Id
# Specified as part of the path expression
  labelId:
    name: labelId
    in: path
    description: |
      Label UUID
    type: string
    required: true

# Throttling Policy Id
# Specified as part of the path expression
  policyId:
    name: policyId
    in: path
    description: |
      Thorttle policy UUID
    type: string
    required: true

# Custom rule Id
# Specified as part of the path expression
  ruleId:
    name: ruleId
    in: path
    description: |
      Custom rule UUID
    type: string
    required: true

# Application Id
# Specified as part of the path expression
  applicationId:
    name: applicationId
    in: path
    description: |
      Application UUID
    type: string
    required: true

# Blocking Condition Id
# Specified as part of the path expression
  conditionId:
    name: conditionId
    in: path
    description: |
      Blocking condition identifier
    type: string
    required: true

# The HTTP Accept header
  Accept:
    name: Accept
    in: header
    description: |
      Media types acceptable for the response. Default is application/json.
    default: application/json
    type: string

# The HTTP Content-Type header
  Content-Type:
    name: Content-Type
    in: header
    description: |
      Media type of the entity in the body. Default is application/json.
    default: application/json
    required: true
    type : string

# The HTTP If-None-Match header
# Used to avoid retrieving data that are already cached
  If-None-Match:
    name: If-None-Match
    in: header
    description: |
      Validator for conditional requests; based on the ETag of the formerly retrieved
      variant of the resource (Will be supported in future).
    type : string

# The HTTP If-Modified-Since header
# Used to avoid retrieving data that are already cached
  If-Modified-Since:
    name: If-Modified-Since
    in: header
    description: |
      Validator for conditional requests; based on Last Modified header of the
      formerly retrieved variant of the resource (Will be supported in future).
    type: string

# The HTTP If-Match header
# Used to avoid concurrent updates
  If-Match:
    name: If-Match
    in: header
    description: |
      Validator for conditional requests; based on ETag (Will be supported in future).
    type: string

# The HTTP If-Unmodified-Since header
# Used to avoid concurrent updates
  If-Unmodified-Since:
    name: If-Unmodified-Since
    in: header
    description: |
      Validator for conditional requests; based on Last Modified header (Will be supported in future).
    type: string

# Used for pagination:
# The maximum number of resoures to be returned by a GET
  limit:
    name: limit
    in: query
    description: |
      Maximum size of resource array to return.
    default: 25
    type: integer

# Used for pagination:
# The order number of an instance in a qualified set of resoures
# at which to start to return the next batch of qualified resources
  offset:
    name: offset
    in: query
    description: |
      Starting point within the complete list of items qualified.
    default: 0
    type: integer

# Mediation policy identifier
# Specified as part of the path expression
  mediationPolicyId:
    name: mediationPolicyId
    in: path
    description: |
      Mediation policy Id
    required: true
    type: string

# Group Identifier of the application
  user:
    name: user
    in: query
    description: |
      username of the application creator
    required: false
    type: string

  # Workflow reference ID
  # Specified as part of the path expression
  workflowReferenceId-Q:
    name: workflowReferenceId
    in: query
    description: |
      Workflow reference id
    required: true
    type: string

  # API Category Id
  # Specified as part of the path expression
  apiCategoryId:
    name: apiCategoryId
    in: path
    description: |
      API Category UUID
    type: string
    required: true
######################################################
# The response schemas used by the API resources
######################################################
responses:

  # Bad Request Error Response Schema
  BadRequest:
    description: Bad Request. Invalid request or validation error.
    schema:
      $ref: '#/definitions/Error'
    examples:
      application/json:
        code: 400
        message: "Bad Request"
        description: "Invalid request or validation error"
        moreInfo: ""
        error: []

  # Not Found Error Response Schema
  NotFound:
    description: Not Found. The specified resource does not exist.
    schema:
      $ref: '#/definitions/Error'
    examples:
      application/json:
        code: 404
        message: "Not Found"
        description: "The specified resource does not exist"
        moreInfo: ""
        error: []

  # Not Acceptable Error Response Schema
  NotAcceptable:
    description: Not Acceptable. The requested media type is not supported.
    schema:
      $ref: '#/definitions/Error'
    examples:
      application/json:
        code: 406
        message: "Not Acceptable"
        description: "The requested media type is not supported"
        moreInfo: ""
        error: []

  # Conflict Error Response Schema
  Conflict:
    description: Conflict. Specified resource already exists.
    schema:
      $ref: '#/definitions/Error'
    examples:
      application/json:
        code: 409
        message: "Conflict"
        description: "Specified resource already exists"
        moreInfo: ""
        error: []

  # Precondition Failed Error Response Schema
  PreconditionFailed:
    description: Precondition Failed. The request has not been performed because one of the preconditions is not met.
    schema:
      $ref: '#/definitions/Error'
    examples:
      application/json:
        code: 412
        message: "Precondition Failed"
        description: "The request has not been performed because one of the preconditions is not met"
        moreInfo: ""
        error: []

  # Unsupported Media Type Error Response Schema
  UnsupportedMediaType:
    description: Unsupported Media Type. The entity of the request was not in a supported format.
    schema:
      $ref: '#/definitions/Error'
    examples:
      application/json:
        code: 415
        message: "Unsupported media type"
        description: "The entity of the request was not in a supported format"
        moreInfo: ""
        error: []

  # Internal Server Error Response Schema
  InternalServerError:
    description: Internal Server Error.
    schema:
      $ref: '#/definitions/Error'
    examples:
      application/json:
        code: 500
        message: "Internal Server Error"
        description: "The server encountered an internal error. Please contact administrator."
        moreInfo: ""
        error: []

######################################################
# The resources used by some of the APIs above within the message body
######################################################
definitions:

#-----------------------------------------------------
# The Error resource
#-----------------------------------------------------
  Error:
    title: Error object returned with 4XX HTTP status
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int64
        description: Error code
      message:
        type: string
        description: Error message.
      description:
        type: string
        description: |
          A detail description about the error message.
      moreInfo:
        type: string
        description: |
          Preferably an url with more details about the error.
      error:
        type: array
        description: |
          If there are more than one error list them out.
          For example, list out validation errors by each field.
        items:
          $ref: '#/definitions/ErrorListItem'

#-----------------------------------------------------
# The Error List Item resource
#-----------------------------------------------------
  ErrorListItem:
    title: Description of individual errors that may have occurred during a request.
    required:
      - code
      - message
    properties:
      code:
        type: string
        description: Error code
      message:
        type: string
        description: |
          Description about individual errors occurred

#-----------------------------------------------------
# The Throttling Policy resource
#-----------------------------------------------------
  ThrottlePolicy :
    title: Generic Throttling Policy
    required:
      - policyName
    properties:
      policyId:
        type: string
        description: Id of policy
        example: 0c6439fd-9b16-3c2e-be6e-1086e0b9aa93
        readOnly: true
      policyName:
        type: string
        description: Name of policy
        example: Policy1
      displayName:
        type: string
        description: Display name of the policy
      description:
        type: string
        description: Description of the policy
      isDeployed:
        type: boolean
        default: false
        description: Indicates whether the policy is deployed successfully or not.

#-----------------------------------------------------
# The Advanced Throttling Policy Info resource
#-----------------------------------------------------
  AdvancedThrottlePolicyInfo :
    title: Advanced Throttling Policy
    required:
      - defaultLimit
    allOf:
      - $ref: '#/definitions/ThrottlePolicy'
      - properties:
          defaultLimit:
            $ref: '#/definitions/ThrottleLimit'

#-----------------------------------------------------
# The Advanced Throttling Policy resource
#-----------------------------------------------------
  AdvancedThrottlePolicy :
    title: Advanced Throttling Policy
    required:
      - defaultLimit
    allOf:
      - $ref: '#/definitions/ThrottlePolicy'
      - properties:
          defaultLimit:
            $ref: '#/definitions/ThrottleLimit'
          conditionalGroups:
            type: array
            description: |
              Group of conditions which allow adding different parameter conditions to the throttling limit.
            items:
              $ref: '#/definitions/ConditionalGroup'
    example:
      policyName: AdvancedPolicy
      displayName: AdvancedPolicy
      description: Allows 30 request per minute
      isDeployed: false
      defaultLimit:
        type: RequestCountLimit
        timeUnit: min
        unitTime: 10
        requestCount: 30
      conditionalGroups:
      - description: string
        conditions:
        - type: HeaderCondition
          invertCondition: false
          headerName: Host
          headerValue: 10.100.7.77
        limit:
          type: RequestCountLimit
          timeUnit: min
          unitTime: 10
          requestCount: 30

#-----------------------------------------------------
# The Advanced Throttling Policy List resource
#-----------------------------------------------------
  AdvancedThrottlePolicyList:
    title: Advanced Throttling Policy List
    properties:
      count:
        type: integer
        description: |
          Number of Advanced Throttling Policies returned.
        example: 1
      list:
        type: array
        items:
          $ref: '#/definitions/AdvancedThrottlePolicyInfo'

  #-----------------------------------------------------
  # The Email list
  #-----------------------------------------------------
  Email:
    title: Email
    properties:
      email:
        type: string
        description: email value
        example: "abc@.com"

#-----------------------------------------------------
# The Application Throttling Policy resource
#-----------------------------------------------------
  ApplicationThrottlePolicy:
    title: Application Throttling Policy
    required:
      - defaultLimit
    allOf:
      - $ref: '#/definitions/ThrottlePolicy'
      - properties:
          defaultLimit:
            $ref: '#/definitions/ThrottleLimit'
    example:
      policyName: 20PerMin
      displayName: 20PerMin
      description: Allows 20 request per minute
      isDeployed: true
      defaultLimit:
        type: RequestCountLimit
        requestCount: 20
        timeUnit: min
        unitTime: 1

#-----------------------------------------------------
# The Advanced Throttling Policy List resource
#-----------------------------------------------------
  ApplicationThrottlePolicyList:
    title: Application Level Throttling Policy List
    properties:
      count:
        type: integer
        description: |
          Number of Application Throttling Policies returned.
        example: 1
      list:
        type: array
        items:
          $ref: '#/definitions/ApplicationThrottlePolicy'

#-----------------------------------------------------
# The Subscription Throttling Policy resource
#-----------------------------------------------------
  SubscriptionThrottlePolicy:
    title: Subscription Throttling Policy
    required:
      - defaultLimit
    allOf:
      - $ref: '#/definitions/ThrottlePolicy'
      - properties:
          defaultLimit:
            $ref: '#/definitions/ThrottleLimit'
          monetization:
            $ref: '#/definitions/MonetizationInfo'
          rateLimitCount:
            type: integer
            default: 0
            description: Burst control request count
            example: 10
          rateLimitTimeUnit:
            type: string
            description: Burst control time unit
            example: min
          customAttributes:
            description: |
              Custom attributes added to the Subscription Throttling Policy
            type: array
            items:
              $ref: '#/definitions/CustomAttribute'
            additionalProperties:
              type: string
            example: {}
          stopOnQuotaReach:
            type: boolean
            default: false
            description: |
             This indicates the action to be taken when a user goes beyond the allocated quota. If checked, the user's requests will be dropped. If unchecked, the requests will be allowed to pass through.
          billingPlan:
            type: string
            description: |
              define whether this is Paid or a Free plan. Allowed values are FREE or COMMERCIAL.
    example:
      policyName: Platinum
      displayName: Platinum
      description: Allows 5000 requests per minute
      isDeployed: true
      defaultLimit:
        type: RequestCountLimit
        timeUnit: min
        unitTime: 1
        requestCount: 5000
      rateLimitCount: 0
      rateLimitTimeUnit:
      stopOnQuotaReach: false
      billingPlan: FREE
      customAttributes: 
        - name: customAttr1
          value: value1
        - name: customAttr2
          value: value2

#-----------------------------------------------------
# The Subscription Throttling Policy List resource
#-----------------------------------------------------
  SubscriptionThrottlePolicyList:
    title: Subscription Level Throttling Policy List
    properties:
      count:
        type: integer
        description: |
          Number of Subscription Throttling Policies returned.
        example: 1
      list:
        type: array
        items:
          $ref: '#/definitions/SubscriptionThrottlePolicy'

#-----------------------------------------------------
# The Custom Rule resource
#-----------------------------------------------------
  CustomRule:
    title: Custom Rule
    required:
      - siddhiQuery
      - keyTemplate
    allOf:
      - $ref: '#/definitions/ThrottlePolicy'
      - properties:
          siddhiQuery:
            type: string
            description: Siddhi query which represents the custom throttling policy
            example: |
              FROM RequestStream\nSELECT userId, ( userId == 'admin@carbon.super' ) AS isEligible , str:concat('admin@carbon.super','') as throttleKey\nINSERT INTO EligibilityStream; \n\nFROM EligibilityStream[isEligible==true]#throttler:timeBatch(1 min) \nSELECT throttleKey, (count(userId) >= 10) as isThrottled, expiryTimeStamp group by throttleKey \nINSERT ALL EVENTS into ResultStream;
          keyTemplate:
            type: string
            description: The specific combination of attributes that are checked in the policy.
            example: $userId
    example:
      policyId: 7c7ed7c4-5a7c-4e08-850a-a95bbfcc2fb6
      policyName: custom
      displayName:
      description: Allow 10 requests per minute for admin user
      isDeployed: true
      siddhiQuery: "FROM RequestStream\nSELECT userId, ( userId == 'admin@carbon.super'
        ) AS isEligible , str:concat('admin@carbon.super','') as throttleKey\nINSERT INTO
        EligibilityStream; \n\nFROM EligibilityStream[isEligible==true]#throttler:timeBatch(1
        min) \nSELECT throttleKey, (count(userId) >= 10) as isThrottled, expiryTimeStamp
        group by throttleKey \nINSERT ALL EVENTS into ResultStream;"
      keyTemplate: "$userId"

#-----------------------------------------------------
# The Custom Rule List resource
#-----------------------------------------------------
  CustomRuleList:
    title: Custom Rule List
    properties:
      count:
        type: integer
        description: |
          Number of Custom Rules returned.
        example: 1
      list:
        type: array
        items:
          $ref: '#/definitions/CustomRule'

#-----------------------------------------------------
# The Conditional Group resource
#-----------------------------------------------------
  ConditionalGroup :
    title: Conditional Groups for Throttling
    required:
      - limit
      - conditions
    properties:
      description:
        type: string
        description: Description of the Conditional Group
      conditions:
        type: array
        items:
          $ref: '#/definitions/ThrottleCondition'
        description: |
          Individual throttling conditions. They can be defined as either HeaderCondition, IPCondition, JWTClaimsCondition, QueryParameterCondition
          Please see schemas of each of those throttling condition in Definitions section.
        example: |
          [
            {
               "type": "IPCondition",
               "invertCondition": false,
               "ipConditionType": "IPSpecific",
               "specificIP": "10.100.1.22",
               "startingIP": null,
               "endingIP": null
            },
            {
               "type": "HeaderCondition",
               "invertCondition": false,
               "headerName": "Location",
               "headerValue": "google.com"
            }
          ]
      limit:
        $ref: '#/definitions/ThrottleLimit'

#-----------------------------------------------------
# The Throttling Condition resource
#-----------------------------------------------------
  ThrottleCondition:
    discriminator: type
    x-wso2-subtypes:
      - HeaderCondition
      - IPCondition
      - JWTClaimsCondition
      - QueryParameterCondition
    title: Conditions used for Throttling
    description: Throttling Conditions
    required:
      - type
    properties:
      type:
        type: string
        enum:
          - HeaderCondition
          - IPCondition
          - JWTClaimsCondition
          - QueryParameterCondition
        description: |
          Type of the thottling condition.
          Allowed values are HeaderCondition, IPCondition, JWTClaimsCondition, QueryParameterCondition
      invertCondition:
        type: boolean
        default: false
        description: |
          Specifies whether inversion of the condition to be matched against the request.

          **Note:** When you add conditional groups for advanced throttling policies, this paramater should have the same value (`true` or `false`)
          for the same type of conditional group.

#-----------------------------------------------------
# The Throttling HTTP Header Condition resource
#-----------------------------------------------------
  HeaderCondition:
    title: HTTP Headerc based throttling condition
    required:
      - headerName
      - headerValue
    allOf:
      - $ref: '#/definitions/ThrottleCondition'
      - properties:
          headerName:
            type: string
            description: Name of the header
          headerValue:
            type: string
            description: Value of the header

#-----------------------------------------------------
# The Throttling IP Condition resource
#-----------------------------------------------------
  IPCondition:
    title: IP based throttling condition
    required:
      - specificIP
    allOf:
      - $ref: '#/definitions/ThrottleCondition'
      - properties:
          ipConditionType:
            type: string
            enum:
              - IPRange
              - IPSpecific
            description: Type of the IP condition. Allowed values are "IPRange" and "IPSpecific"
          specificIP:
            type: string
            description: Specific IP when "IPSpecific" is used as the ipConditionType
          startingIP:
            type: string
            description: Staring IP when "IPRange" is used as the ipConditionType
          endingIP:
            type: string
            description: Ending IP when "IPRange" is used as the ipConditionType

#-----------------------------------------------------
# The JWT Claims Condition resource
#-----------------------------------------------------
  JWTClaimsCondition:
    title:  JWT claim attibute based throttling condition
    required:
      - claimUrl
      - attribute
    allOf:
      - $ref: '#/definitions/ThrottleCondition'
      - properties:
          claimUrl:
            type: string
            description: JWT claim URL
          attribute:
            type: string
            description: Attribute to be matched

#-----------------------------------------------------
# The Query Parameter Condition resource
#-----------------------------------------------------
  QueryParameterCondition:
    title: Query parameter based throttling condition
    required:
      - parameterName
      - parameterValue
    allOf:
      - $ref: '#/definitions/ThrottleCondition'
      - properties:
          parameterName:
            type: string
            description: Name of the query parameter
          parameterValue:
            type: string
            description: Value of the query parameter to be matched

#-----------------------------------------------------
# The Throttling Limit resource
#-----------------------------------------------------
  ThrottleLimit :
    discriminator: type
    x-wso2-subtypes:
      - RequestCountLimit
      - BandwidthLimit
    required:
      - type
      - timeUnit
      - unitTime
    properties:
      type:
        type: string
        enum:
          - RequestCountLimit
          - BandwidthLimit
        description: |
          Type of the throttling limit. Allowed values are "RequestCountLimit" and "BandwidthLimit".
          Please see schemas of each of those throttling limit types in Definitions section.
        example: RequestCountLimit
      timeUnit:
        type: string
        description: Unit of the time. Allowed values are "sec", "min", "hour", "day"
        example: min
      unitTime:
        type: integer
        default: 0
        description: Time limit that the throttling limit applies.
        example: 10

#-----------------------------------------------------
# The Monetization Info resource
#-----------------------------------------------------
  MonetizationInfo:
    title: API monetization details object
    required:
      - monetizationPlan
      - properties
    properties:
      monetizationPlan:
        type: string
        description: Flag to indicate the monetization plan
        enum:
          - FixedRate
          - DynamicRate
        example: FixedRate
      properties:
        type: object
        description: Map of custom properties related to each monetization plan
        additionalProperties:
          type: string

#-----------------------------------------------------
# The Throttling Bandwidth Limit resource
#-----------------------------------------------------
  BandwidthLimit :
    required:
      - dataAmount
      - dataUnit
    allOf:
      - $ref: '#/definitions/ThrottleLimit'
      - properties:
          dataAmount:
            type: integer
            format: int64
            description: Amount of data allowed to be transfered
            example: 1000
          dataUnit:
            type: string
            description: Unit of data allowed to be transfered. Allowed values are "KB", "MB" and "GB"
            example: KB

#-----------------------------------------------------
# The Throttling Request Count Limit resource
#-----------------------------------------------------
  RequestCountLimit :
    required:
      - requestCount
    allOf:
      - $ref: '#/definitions/ThrottleLimit'
      - properties:
          requestCount:
            type: integer
            format: int64
            example: 1000
            description: Maximum number of requests allowed

#-----------------------------------------------------
# The Throttling Blocking Condition resource
#-----------------------------------------------------
  BlockingCondition:
    title: Blocking Conditions
    description: Blocking Conditions
    required:
      - conditionType
      - conditionValue
    properties:
      conditionId:
        type: string
        description: Id of the blocking condition
        readOnly: true
        example: b513eb68-69e8-4c32-92cf-852c101363cf
      conditionType:
        type: string
        description: Type of the blocking condition (IP Address, IP Range, API Context, Application, User)
        example: IP
      conditionValue:
        type: object
        description: Value of the blocking condition


                    `IP Address type condition`

                      {"conditionType":"IP","conditionValue":{"invert":false,"fixedIp":"127.0.0.2"},"conditionStatus":true}
                    

                    `IP Range type condition`

                      {"conditionType":"IPRANGE","conditionValue":{"endingIp":"127.9.9.2","startingIp":"127.9.9.1","invert":false},"conditionStatus":true}
                    

                    `Application type condition`

                      {"conditionType":"APPLICATION","conditionValue":"admin:DefaultApplication","conditionStatus":true}


                    `API Context type condition`

                      {"conditionType":"API","conditionValue":"/pizzashack/1.0.0","conditionStatus":true}
                    
                      
                    `User type condition`

                      {"conditionType":"USER","conditionValue":"admin","conditionStatus":true}
        
        example: { "fixedIp": "192.168.1.1", "invert":false }

#-----------------------------------------------------
# The Throttling Blocking Condition List resource
#-----------------------------------------------------
  BlockingConditionList:
    title: Blocking Conditions List
    properties:
      count:
        type: integer
        description: |
          Number of Blocking Conditions returned.
        example: 1
      list:
        type: array
        items:
          $ref: '#/definitions/BlockingCondition'

#-----------------------------------------------------
# Custom Attribute object
#-----------------------------------------------------
  CustomAttribute:
    title: Name-Value pair
    required:
      - name
      - value
    properties:
      name:
        type: string
        description: Name of the custom attribute
        example: customAttr1
      value:
        type: string
        description: Value of the custom attribute
        example: value1

#-----------------------------------------------------
# The Mediation List resource
#-----------------------------------------------------
  mediationList:
    title: Mediation List
    properties:
      count:
        type: integer
        description: |
          Number of mediation sequences returned.
        example: 1
      next:
        type: string
        description: |
          Link to the next subset of sequences qualified.
          Empty if no more sequences are to be returned.
        example: ""
      previous:
        type: string
        description: |
          Link to the previous subset of sequences qualified.
          Empty if current subset is the first subset returned.
        example: ""
      list:
        type: array
        items:
          $ref: '#/definitions/MediationInfo'

#-----------------------------------------------------
# The MediationInfo resource
#-----------------------------------------------------
  MediationInfo:
    title: MediationInfo
    required:
      - name
      - type
      - id
    properties:
      name:
        type: string
        example: json_fault.xml
      id:
        type: string
        example: 01234567-0123-0123-0123-012345678901
      type:
        type: string
        enum:
          - in
          - out
          - fault
        example: in

#-----------------------------------------------------
# The Mediation resource
#-----------------------------------------------------
  Mediation:
    title: Mediation
    required:
      - name
      - type
      - config
    properties:
      id:
        type: string
        example: 01234567-0123-0123-0123-012345678901
        readOnly: true
      name:
        type: string
        example: json_fault.xml
      type:
        type: string
        enum:
          - in
          - out
          - fault
        example: in
      config:
        type: string
        example: '<sequence xmlns="http://ws.apache.org/ns/synapse" name="log_in_message">
                      <log level="full">
                          <property name="IN_MESSAGE" value="IN_MESSAGE_21133232"/>
                      </log>
                  </sequence>'

#-----------------------------------------------------
# The Application List resource
#-----------------------------------------------------
  ApplicationList:
    title: Application List
    properties:
      count:
        type: integer
        description: |
          Number of applications returned.
        example: 1
      next:
        type: string
        description: |
          Link to the next subset of resources qualified.
          Empty if no more resources are to be returned.
        example: "/applications?limit=1&offset=2&user="
      previous:
        type: string
        description: |
          Link to the previous subset of resources qualified.
          Empty if current subset is the first subset returned.
        example: "/applications?limit=1&offset=0&user="
      list:
        type: array
        items:
          $ref: '#/definitions/ApplicationInfo'

#-----------------------------------------------------
# The Application Info resource
#-----------------------------------------------------
  ApplicationInfo:
    title: Application info object with basic application details
    properties:
      applicationId:
        type: string
        example: 01234567-0123-0123-0123-012345678901
      name:
        type: string
        example: CalculatorApp
      owner:
        type: string
        example: admin
      status:
        type: string
        example: APPROVED
      groupId:
        type: string
        example: ""

#-----------------------------------------------------
# The API Info List resource
#-----------------------------------------------------
  APIInfoList:
    title: API Info List
    properties:
      count:
        type: integer
        description: |
          Number of API Info objects returned.
        example: 1
      list:
        type: array
        items:
          $ref: '#/definitions/APIInfo'

#-----------------------------------------------------
# The API Info resource
#-----------------------------------------------------
  APIInfo:
    title: API info object with basic API details
    properties:
      name:
        type: string
        description: The name of the API.
        example: PizzaShackAPI
      version:
        type: string
        description: The version of the API
        example: 1.0.0
      provider:
        type: string
        description: The provider of the API
        example: admin

#-----------------------------------------------------
# The Label resource
#-----------------------------------------------------
  Label:
    title: Label
    required:
    - name
    properties:
      id:
        type: string
        example: "This is not mandatory.Auto generate by code"
        readOnly: true
      name:
        type: string
        example: "Public"
      description:
        type: string
        example: "Label to use for public Gateway"
      accessUrls:
        type: array
        items:
          type: string
          example: "http://localhost:9443/"
#-----------------------------------------------------
# The Label List resource
#-----------------------------------------------------
  LabelList:
    title: Label List
    properties:
      count:
        type: integer
        description: |
          Number of Labels returned.
        example: 1
      list:
        type: array
        items:
          $ref: '#/definitions/Label'

  #-----------------------------------------------------
  # The publish status resource
  #-----------------------------------------------------
  PublishStatus:
    title: Usage publish status
    properties:
      status:
        type: string
        description: Status of the usage publish request
      message:
        type: string
        description: detailed message of the status

  #-----------------------------------------------------
  # The publish status resource
  #-----------------------------------------------------
  MonetizationUsagePublishInfo:
   title: Usage publish status
   properties:
     state:
       type: string
       description: State of usage publish job
     status:
       type: string
       description: Status of usage publish job
     startedTime:
       type: string
       description: Timestamp of the started time of the Job
     lastPublsihedTime:
       type: string
       description: Timestamp of the last published time

  #-----------------------------------------------------
  # The workflow response resource
  #-----------------------------------------------------
  Workflow:
    title: workflow
    required:
      - status
    properties:
      status:
        description: |
          This attribute declares whether this workflow task is approved or rejected.
        type: string
        enum:
          - APPROVED
          - REJECTED
        example: APPROVED
      attributes:
        description: |
          Custom attributes to complete the workflow task
        type: object
        additionalProperties:
          type: string
        example: {}
      description:
        type: string
        example: "Approve workflow request."

  #-----------------------------------------------------
  # The Tenant info response resource
  #-----------------------------------------------------
  TenantInfo:
    title: Tenant information
    type: object
    description: The tenant information of the user
    properties:
      username:
        type: string
        example: 'john'
      tenantDomain:
        type: string
        example: 'carbon.super'
      tenantId:
        type: integer
        example: -1234

  #-----------------------------------------------------
  # The CustomURL info response resource
  #-----------------------------------------------------
  CustomUrlInfo:
    title: Custom url information
    type: object
    description: The custom url information of the tenant domain
    properties:
      tenantDomain:
        type: string
        example: 'carbon.super'
      tenantAdminUsername:
        type: string
        example: 'john@foo.com'
      enabled:
        type: boolean
        example: true
      devPortal:
        type: object
        properties:
          url:
            type: string
            example: "http://example.com"

  #-----------------------------------------------------
  # The Category resource
  #-----------------------------------------------------
  APICategory:
    title: API Category
    required:
    - name
    properties:
      id:
        type: string
        example: "01234567-0123-0123-0123-012345678901"
        readOnly: true
      name:
        type: string
        example: "Finance"
      description:
        type: string
        example: "Finance related APIs"

  #-----------------------------------------------------
  # The Category List resource
  #-----------------------------------------------------
  APICategoryList:
    title: API Category List
    properties:
      count:
        type: integer
        description: |
          Number of API categories returned.
        example: 1
      list:
        type: array
        items:
          $ref: '#/definitions/APICategory'

  #-----------------------------------------------------
  # The File Information resource
  #-----------------------------------------------------
  FileInfo :
    title: File Information including meta data
    properties:
      relativePath:
        type: string
        description: relative location of the file (excluding the base context and host of the Admin API)
        example: "api-categories/01234567-0123-0123-0123-012345678901/thumbnail"
      mediaType:
        type: string
        description: media-type of the file
        example: "image/jpeg"


#-----------------------------------------------------
# END-OF-FILE
#-----------------------------------------------------
